# Requires these pre-installed (Cluster)Tasks:
# - git-clone (Task from Tekton Hub)
# - buildah (ClusterTask)
# - openshift-client (ClusterTask)
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: cd-pipeline
spec:
  workspaces:
    - name: pipeline-workspace
  params:
    - name: repo-url
      description: Git repository URL (e.g., https://github.com/VA-run23/devops-capstone-project.git)
    - name: branch
      description: Git branch to checkout
      default: main
    - name: build-image
      description: Fully-qualified image (e.g., image-registry.../namespace/accounts:1)
  tasks:
    - name: init
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: cleanup

    - name: clone
      runAfter:
        - init
      workspaces:
        - name: output
          workspace: pipeline-workspace
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.repo-url)
        - name: revision
          value: $(params.branch)
        - name: submodules
          value: "true"
        - name: depth
          value: "1"

    - name: build
      runAfter:
        - clone
      workspaces:
        - name: source
          workspace: pipeline-workspace
      taskRef:
        name: buildah
        kind: ClusterTask
      params:
        - name: IMAGE
          value: $(params.build-image)
        # Optional (uncomment if needed):
        # - name: CONTEXT
        #   value: .
        # - name: DOCKERFILE
        #   value: ./Dockerfile

    - name: deploy
      runAfter:
        - build
      workspaces:
        - name: manifest-dir
          workspace: pipeline-workspace
      taskRef:
        name: openshift-client
        kind: ClusterTask
      params:
        - name: SCRIPT
          value: |
            set -euo pipefail
            echo "Updating manifest..."
            sed -i "s|IMAGE_NAME_HERE|$(params.build-image)|g" deploy/deployment.yaml
            echo "Deploying to OpenShift..."
            oc apply -f deploy/
            oc rollout status deploy/accounts
            oc get pods -l app=accounts
